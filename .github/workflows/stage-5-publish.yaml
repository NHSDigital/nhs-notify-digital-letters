name: "Publish stage"

on:
  workflow_call:
    inputs:
      build_datetime:
        description: "Build datetime, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_timestamp:
        description: "Build timestamp, set by the CI/CD pipeline workflow"
        required: true
        type: string
      build_epoch:
        description: "Build epoch, set by the CI/CD pipeline workflow"
        required: true
        type: string
      nodejs_version:
        description: "Node.js version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      python_version:
        description: "Python version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      terraform_version:
        description: "Terraform version, set by the CI/CD pipeline workflow"
        required: true
        type: string
      version:
        description: "Version of the software, set by the CI/CD pipeline workflow"
        required: true
        type: string
      is_version_prerelease:
        description: "Is this a semantically versioned pre release, set by the CI/CD pipeline workflow"
        required: true
        type: string
jobs:
  publish:
    name: "Publish packages"
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v5

      - name: "Get artifacts: jekyll docs"
        uses: actions/download-artifact@v5
        with:
          path: ./artifacts/jekyll-docs-${{ inputs.version }}
          name: jekyll-docs-${{ inputs.version }}

      - name: "Get artifacts: schema"
        uses: actions/download-artifact@v5
        with:
          path: ./artifacts/schemas-${{ inputs.version }}
          name: schemas-${{ inputs.version }}


      - name: Draft Release
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: |
          gh release create \
          "${{ inputs.version }}" \
          --draft \
          --latest \
          --title "${{ inputs.version }}" \
          --notes "Release of ${{ inputs.version }}" \
          ${{ inputs.is_version_prerelease == 'true' && '--prerelease' || '' }}

      - name: "Upload jeykll docs release asset"
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: |
          cp ./artifacts/jekyll-docs-${{ inputs.version }}/artifact.tar $RUNNER_TEMP/jekyll-docs-${{ inputs.version }}.tar
          gh release upload \
          "${{ inputs.version }}" \
          $RUNNER_TEMP/jekyll-docs-${{ inputs.version }}.tar#jekyll-docs-${{ inputs.version }}

      - name: "Upload schema release asset"
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: |
          cp ./artifacts/schemas-${{ inputs.version }}/artifact.tar $RUNNER_TEMP/schemas-${{ inputs.version }}.tar
          gh release upload \
          "${{ inputs.version }}" \
          $RUNNER_TEMP/schemas-${{ inputs.version }}.tar#schemas-${{ inputs.version }}


      - name: Publish Release
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
        run: gh release edit "${{ inputs.version }}" --draft=false
